// Code generated by MockGen. DO NOT EDIT.
// Source: github.banking/sardarmd/domain/accounts (interfaces: AccountRepository)

// Package mockaccounts is a generated GoMock package.
package mockaccounts

import (
	reflect "reflect"

	accounts "github.banking/sardarmd/domain/accounts"
	errs "github.banking/sardarmd/errs"
	gomock "github.com/golang/mock/gomock"
)

// MockAccountRepository is a mock of AccountRepository interface.
type MockAccountRepository struct {
	ctrl     *gomock.Controller
	recorder *MockAccountRepositoryMockRecorder
}

// MockAccountRepositoryMockRecorder is the mock recorder for MockAccountRepository.
type MockAccountRepositoryMockRecorder struct {
	mock *MockAccountRepository
}

// NewMockAccountRepository creates a new mock instance.
func NewMockAccountRepository(ctrl *gomock.Controller) *MockAccountRepository {
	mock := &MockAccountRepository{ctrl: ctrl}
	mock.recorder = &MockAccountRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountRepository) EXPECT() *MockAccountRepositoryMockRecorder {
	return m.recorder
}

// CreateCustomer mocks base method.
func (m *MockAccountRepository) CreateCustomer(arg0 accounts.Account) (*accounts.Account, *errs.AppErrors) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateCustomer", arg0)
	ret0, _ := ret[0].(*accounts.Account)
	ret1, _ := ret[1].(*errs.AppErrors)
	return ret0, ret1
}

// CreateCustomer indicates an expected call of CreateCustomer.
func (mr *MockAccountRepositoryMockRecorder) CreateCustomer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateCustomer", reflect.TypeOf((*MockAccountRepository)(nil).CreateCustomer), arg0)
}
